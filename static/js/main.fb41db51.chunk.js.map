{"version":3,"sources":["redux/dialogs-reducer.js","components/Users/Users.module.css","assets/images/userImage.png","assets/images/preloader.svg","assets/images/lookingForAJob.jpg","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/NavbarFriends/NavbarFriends.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Music/Music.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","api/api.js","utils/object-helpers.js","redux/users-reducer.js","components/common/Preloader/Preloader.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/navbar-reducer.js","redux/redux-store.js","App.js","hoc/withSuspense.js","index.js","utils/validftors/validators.js","components/common/FormsContols/FormsControls.js","components/common/FormsContols/FormsControls.module.css","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","hoc/withAuthRedirect.js","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx"],"names":["initialState","dialogs","id","name","avatar","messages","message","newMessageText","addTextMessageCreator","type","updateTextMessageBodyCreator","body","dialogsReducer","state","arguments","length","undefined","action","Object","E_Programming_React_projects_project01_first_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","concat","E_Programming_React_projects_project01_first_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","module","exports","__webpack_require__","p","nav","item","active","Boolean","window","location","hostname","match","NavbarFriends","props","friendsOnline","map","f","react_default","a","createElement","DialogItem","Navbar","className","cls","react_router_dom","to","activeClassName","Navbar_NavbarFriends_NavbarFriends","onlineFriends","NavbarContainer","connect","navbar","dispatch","News","Settings","Music","Paginator","_ref","totalItemsCount","pageSize","currentPage","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","filter","cn","defineProperty","activePage","pageNumber","User","user","followingInProgress","unfollow","follow","objectWithoutProperties","src","photo","photos","small","userImage","followed","disabled","some","status","Users","totalUsersCount","common_Paginator_Paginator","users","u","Users_User","key","instance","axios","withCredentials","headers","API-KEY","baseURL","usersAPI","get","then","responce","data","authAPI","email","password","rememberMe","post","profileAPI","userId","put","followAPI","delete","updateObjectInArray","items","itemId","objPropName","newObjProps","objectSpread","isFetching","followSuccess","unfollowSuccess","setUsers","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","actionCreator","apiMethod","wrap","_context2","prev","next","sent","resultCode","stop","_x2","_x3","_x4","_x5","apply","this","usersReducer","toConsumableArray","totalUsers","Preloader","preloader","getUsers","createSelector","usersPage","getPageSize","getCurrentPage","getTotalUsersCount","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","Fragment","common_Preloader_Preloader","components_Users_Users","bind","React","Component","compose","withAuthRedirect","_ref3","_callee3","_context3","_x6","_ref4","_callee4","_context4","_x7","_callee","_context","totalCount","_x","ProfileStatusWithHooks","editMode","setEditMode","_useState3","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileInfo","profile","content","alt","descriptionBlock","large","fullName","ProfileInfo_ProfileStatusWithHooks","aboutMe","lookingForAJob","lookingforAJob","lookingForAJobDescription","socialContact","posts","likesCount","setUserProfile","setUserStatus","profileReducer","newMessage","newPostText","newPostMessage","text","postId","Post","maxLength15","maxLengthCreator","NewPostMessageRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","MyPosts","memo","postsElements","MyPosts_Post_Post","values","addPost","myPostMessage","MyPostsContainer","profilePage","addPostActionCreator","Profile","MyPosts_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","store","ProfileContainer","params","authorizedUserId","getUser","getUserStatus","components_Profile_Profile","assign","auth","isAuth","withRouter","Header","header","loginBlock","login","logout","setAuthUserData","payload","getAuth","_responce$data$data","_login","authReducer","HeaderContainer","components_Header_Header","LoginReduxForm","error","Input","styles","formSummaryError","stopSubmit","_error","react_router","initialized","appReducer","navbarReducer","reducers","combineReducers","messagesPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","App","initializeApp","Header_HeaderContainer","Navbar_NavbarContainer","path","render","Suspense","fallback","Profile_ProfileContainer","Users_UsersContainer","components_News_News","components_Settings_Settings","components_Music_Music","components_Login_Login","AppContainer","Promise","all","SamuraiJSApp","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","d","__webpack_exports__","maxLength","FormControl","input","meta","E_Programming_React_projects_project01_first_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","react__WEBPACK_IMPORTED_MODULE_1___default","formsControl","children","restProps","child","mapStateToPropsForRedirect","RedirectComponent","_React$Component","E_Programming_React_projects_project01_first_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","E_Programming_React_projects_project01_first_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_Programming_React_projects_project01_first_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","E_Programming_React_projects_project01_first_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","E_Programming_React_projects_project01_first_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","dialogsItems","dialog","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Dialogs_module_css__WEBPACK_IMPORTED_MODULE_1__","_Dialogs_module_css__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"static/js/main.fb41db51.chunk.js","sourcesContent":["const UPDATE_TEXT_MESSAGE_BODY = 'UPDATE-TEXT-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            avatar: \"http://profnastil.berezniki159.ru/wp-content/uploads/2016/04/manager.png\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Andrey\",\r\n            avatar: \"http://profnastil.berezniki159.ru/wp-content/uploads/2016/04/manager.png\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Martyn\",\r\n            avatar: \"http://profnastil.berezniki159.ru/wp-content/uploads/2016/04/manager.png\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Sasha\",\r\n            avatar: \"https://iconfree.net/uploads/icon/2018/9/27/user-woman-girl-icon-8165-512x512.png\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Sveta\",\r\n            avatar: \"https://iconfree.net/uploads/icon/2018/9/27/user-woman-girl-icon-8165-512x512.png\"\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Valera\",\r\n            avatar: \"http://profnastil.berezniki159.ru/wp-content/uploads/2016/04/manager.png\"\r\n        }\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi!\"},\r\n        {id: 2, message: \"What are you doing?\"},\r\n        {id: 3, message: \"Do you want your boat back?\"},\r\n    ],\r\n    newMessageText: ''\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: action.message}],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addTextMessageCreator = (message) =>\r\n    ({\r\n        type: SEND_MESSAGE,\r\n        message\r\n    });\r\n\r\nexport const updateTextMessageBodyCreator = (body) =>\r\n    ({\r\n        type: UPDATE_TEXT_MESSAGE_BODY,\r\n        body: body\r\n    });\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__23V7Q\"};","module.exports = __webpack_public_path__ + \"static/media/userImage.73fb0d96.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.d21abd83.svg\";","module.exports = __webpack_public_path__ + \"static/media/lookingForAJob.b5754e99.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__uEuU1\",\"item\":\"Navbar_item__IKWlH\",\"active\":\"Navbar_active__1NCKP\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport DialogItem from \"../../Dialogs/DialogItem/DialogItem\";\r\n\r\nconst NavbarFriends = (props) => {\r\n    let friendsOnline = props.state.map( f => <DialogItem id={f.id} name={f.name} avatar={f.avatar}/>);\r\n    return (\r\n        <div>\r\n            <h2>Online friends</h2>\r\n            {friendsOnline}\r\n        </div>)\r\n};\r\n\r\nexport default NavbarFriends;","import React from 'react';\r\nimport cls from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport NavbarFriends from \"./NavbarFriends/NavbarFriends\";\r\n\r\nconst Navbar = (props) => {\r\n    return (<div>\r\n        <nav className={cls.nav}>\r\n            <div className={cls.item}>\r\n                <NavLink to='/profile' activeClassName={cls.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={cls.item}>\r\n                <NavLink to='/dialogs' activeClassName={cls.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={cls.item}>\r\n                <NavLink to='/users' activeClassName={cls.active}>Users</NavLink>\r\n            </div>\r\n            <div className={cls.item}>\r\n                <NavLink to='/news' activeClassName={cls.active}>News</NavLink>\r\n            </div>\r\n            <div className={cls.item}>\r\n                <NavLink to='/music' activeClassName={cls.active}>Music</NavLink>\r\n            </div>\r\n            <div className={cls.item}>\r\n                <NavLink to='/settings' activeClassName={cls.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n        <NavbarFriends state={props.state.onlineFriends} />\r\n</div>)\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n      state: state.navbar\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  }\r\n};\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;","import React from 'react';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings;","import React from 'react';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Music;","import React, {useState} from 'react';\r\nimport cls from './Paginator.module.css';\r\nimport cn from 'classnames';\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={cls.paginator}>\r\n            {portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => {\r\n                        return <span\r\n                            className={cn({[cls.activePage]: currentPage === p}, cls.pageNumber)}\r\n                                 onClick={() => onPageChanged(p)}> {p} </span>\r\n                })\r\n            }\r\n            {portionCount > portionNumber && <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</button>}\r\n        </div>)\r\n};\r\n\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport cls from './Users.module.css';\r\nimport userImage from '../../assets/images/userImage.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow, ...props}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img className={cls.avatar} src={user.photo && user.photos.small != null ? user.photo.small : userImage}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id == user.id)} onClick={() => {\r\n                                unfollow(user.id)\r\n                            }\r\n                            }>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id == user.id)}\r\n                                      onClick={() => {\r\n                                          follow(user.id)\r\n                                      }\r\n                                      }>Follow</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <div>{user.name} </div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n            <span>\r\n                    <span>{\"user.location.country\"}, </span>\r\n                    <span>{\"user.location.city\"}</span>\r\n                </span>\r\n        </div>)\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, ...props}) => {\r\nreturn(\r\n    <div>\r\n        <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage} onPageChanged={onPageChanged} />\r\n        {\r\n            props.users.map(u => <User key={u.id} user={u} followingInProgress={props.followingInProgress}\r\n                                       unfollow={props.unfollow} follow={props.follow} />)\r\n        }\r\n    </div>)\r\n\r\n};\r\n\r\nexport default Users;","import * as axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '5d92bbae-a212-40c2-9538-d06f41a91d06'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n});\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers(currentPage = 1, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(responce => responce.data)\r\n    }\r\n\r\n};\r\n\r\nexport const authAPI = {\r\n\r\n    getAuth() {\r\n       return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post('auth/login', {\r\n            email,\r\n            password,\r\n            rememberMe\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.post('auth/logout')\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n\r\n    getUser(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateUserStatus(status) {\r\n        return instance.put(`profile/status/`, {status})\r\n    }\r\n};\r\n\r\nexport const followAPI = {\r\n\r\n    follow(userId) {\r\n       return instance.post('follow/' + userId)\r\n    },\r\n    unfollow(userId) {\r\n       return instance.delete(`follow/` + userId)\r\n    }\r\n\r\n};","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return  items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {followAPI, usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-PAGES-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state, users: [...action.users]\r\n            };\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsers\r\n            };\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state, currentPage: action.pageNumber\r\n            };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            };\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.isFetching\r\n                        ? [...state.followingInProgress, action.userId]\r\n                        : [...state.followingInProgress.filter(id => id !== action.userId)]\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) =>\r\n    ({\r\n        type: FOLLOW,\r\n        userId\r\n    });\r\n\r\nexport const unfollowSuccess = (userId) =>\r\n    ({\r\n        type: UNFOLLOW,\r\n        userId\r\n    });\r\n\r\nexport const setUsers = (users) =>\r\n    ({\r\n        type: SET_USERS,\r\n        users\r\n    });\r\nexport const setTotalUsersCount = (totalUsers) =>\r\n    ({\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalUsers\r\n    });\r\nexport const setCurrentPage = (pageNumber) =>\r\n    ({\r\n        type: SET_CURRENT_PAGE,\r\n        pageNumber\r\n    });\r\nexport const toggleIsFetching = (isFetching) =>\r\n    ({\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    });\r\nexport const toggleFollowingProgress = (isFetching, userId) =>\r\n    ({\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    });\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n    };\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, actionCreator, apiMethod) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let responce = await apiMethod(userId);\r\n    if (responce.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, followSuccess, followAPI.follow.bind(followAPI))\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, unfollowSuccess, followAPI.unfollow.bind(followAPI))\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Preloader = (props) => {\r\n    return (<div>\r\n        <img src={preloader}/>\r\n    </div>)\r\n};\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n   return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n   return  state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Users from './Users';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged(pageNumber) {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged.bind(this)}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   isFetching={this.props.isFetching}\r\n                    />\r\n        </>\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {follow, unfollow, setUsers, requestUsers })\r\n)(UsersContainer);\r\n\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n      setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n      setEditMode(false);\r\n      props.updateUserStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n\r\n        return <div>\r\n            <div>\r\n                { !editMode &&\r\n                <span onDoubleClick={ activateEditMode }>{props.status || \"No status\"}</span>\r\n                }\r\n            </div>\r\n\r\n            <div>\r\n                { editMode &&\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode } value={status} />\r\n                }\r\n            </div>\r\n            </div>\r\n\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport cls from './ProfileInfo.module.css';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport lookingForAJob from '../../../../assets/images/lookingForAJob.jpg'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return <div>\r\n        <div className={cls.content}>\r\n            <img src='https://www.wallpapers.net/web/wallpapers/valley-harley-davidson-hd-wallpaper/5120x2160.jpg'\r\n                 alt='wallpaper'/>\r\n        </div>\r\n        <div className={cls.descriptionBlock}>\r\n            <img src={props.profile.photos.large}/>\r\n            <div>{props.profile.fullName}</div>\r\n            <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n        </div>\r\n        <div>\r\n            <div>{props.profile.aboutMe}</div>\r\n            <div>{ props.profile.lookingForAJob === true && <img className={cls.lookingforAJob} src={lookingForAJob} /> }</div>\r\n            <div>{ props.profile.lookingForAJob === true && props.profile.lookingForAJobDescription}</div>\r\n        </div>\r\n        <div className={cls.socialContact}>\r\n            Social Contacts\r\n            {}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default ProfileInfo;","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'profileReducer/ADD_POST';\r\nconst UPDATE_TEXT_MESSAGE = 'profileReducer/UPDATE_TEXT_MESSAGE';\r\nconst SET_USER_PROFILE = 'profileReducer/SET_USER_PROFILE';\r\nconst SET_STATUS = 'profileReducer/SET_STATUS';\r\nconst DELETE_POST = 'profileReducer/DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [{id: 1, message: 'Hello, how are you?', likesCount: 15},\r\n        {id: 2, message: 'I am the dangerous, Skyler.', likesCount: 20},\r\n        {id: 3, message: 'And if you save yourself...', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newMessage = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newMessage],\r\n            };\r\n        }\r\n        case UPDATE_TEXT_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                newPostMessage: action.text\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) =>\r\n    ({\r\n        type: ADD_POST,\r\n        newPostText\r\n    });\r\n\r\nexport const deletePost = (postId) =>\r\n    ({\r\n        type: DELETE_POST,\r\n        postId\r\n    });\r\n\r\nexport const setUserProfile = (profile) =>\r\n    ({\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    });\r\nexport const setUserStatus = (status) =>\r\n    ({\r\n        type: SET_STATUS,\r\n        status\r\n    });\r\n\r\nexport const getUser = (userId) => {\r\n    return async (dispatch) => {\r\n        let responce = await profileAPI.getUser(userId);\r\n        dispatch(setUserProfile(responce.data));\r\n    }\r\n};\r\nexport const getUserStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let responce = await profileAPI.getUserStatus(userId);\r\n        dispatch(setUserStatus(responce.data));\r\n\r\n    }\r\n};\r\nexport const updateUserStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let responce = await profileAPI.updateUserStatus(status);\r\n        if (responce.data.resultCode === 0) {\r\n            dispatch(setUserStatus(status));\r\n        }\r\n    }\r\n};\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport cls from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={`${cls.item} ${cls.active}`}>\r\n      <img src='https://img.bgxcdn.com/customers_avatars/20181215180042_561.jpg' alt='avatar'></img>\r\n      <span>{props.message}</span>\r\n      <div>\r\n        <span> {props.likesCount} </span>\r\n        <span>like</span>\r\n        <span>     </span>\r\n        <span>dislike</span>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport cls from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validftors/validators\";\r\nimport {Textarea} from \"../../common/FormsContols/FormsControls\";\r\n\r\nconst maxLength15 = maxLengthCreator(15);\r\n\r\nconst newPostMessage = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'myPostMessage'} placeholder={\"Post text\"} validate={[required, maxLength15]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\nconst NewPostMessageRedux = reduxForm({ form: 'myPostMessage' })(newPostMessage);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let addPost = (values) => {\r\n        props.addPost(values.myPostMessage);\r\n    };\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    return <div className={cls.content}>\r\n        <div>\r\n            My posts\r\n            <div>\r\n                <NewPostMessageRedux onSubmit={addPost} />\r\n            </div>\r\n            <div className={cls.item}>\r\n                New posts\r\n            </div>\r\n            <div className={cls.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    </div>\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n      posts: state.profilePage.posts\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo status={props.status} updateUserStatus={props.updateUserStatus} profile={props.profile}/>\r\n            <MyPostsContainer store={props.store} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUser, getUserStatus, setUserProfile, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        };\r\n        this.props.getUser(userId);\r\n        this.props.getUserStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (<Profile {...this.props} profile={this.props.profile} />)\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {setUserProfile, getUser, getUserStatus, updateUserStatus}),\r\n    withRouter)(ProfileContainer);\r\n","import React from 'react';\r\nimport cls from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={cls.header}>\r\n        <img src='http://diariodeiguala.com/wp-content/uploads/2018/02/How-to-add-new-elements-to-the-logo-1.jpg' alt='logo'/>\r\n        <div className={cls.loginBlock}>\r\n            { props.isAuth ?\r\n                <div>{props.login} - <button onClick={props.logout}>log out</button></div> :\r\n                <NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n        </div>\r\n    </header>\r\n};\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'authReducer/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({\r\n        type: SET_USER_DATA,\r\n        payload: {userId, email, login, isAuth}\r\n    });\r\n\r\nexport const getAuth = () => {\r\n    return async (dispatch) => {\r\n        let responce = await authAPI.getAuth();\r\n\r\n        if (responce.data.resultCode === 0) {\r\n            let {id, email, login} = responce.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let responce = await authAPI.login(email, password, rememberMe);\r\n\r\n        if (responce.data.resultCode === 0) {\r\n            dispatch(getAuth())\r\n        } else {\r\n            let message = responce.data.messages.length > 0 ? responce.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let responce = await authAPI.logout();\r\n\r\n        if (responce.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false\r\n            ))\r\n        }\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuth, logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getAuth()\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout, getAuth})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Input} from \"../common/FormsContols/FormsControls\";\r\nimport {required} from \"../../utils/validftors/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../common/FormsContols/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <Field placeholder={'Login'} component={Input} name={\"login\"} validate={[required]}/>\r\n        </div>\r\n        <div>\r\n          <Field placeholder={'Password'} component={Input} type={\"password\"} name={\"password\"} validate={[required]}/>\r\n        </div>\r\n        <div>\r\n          <Field component={'input'} type={'checkbox'} name={'rememberMe'}/> remember me\r\n        </div>\r\n        <div>\r\n            <button>Submit</button>\r\n        </div>\r\n          {error && <div className={styles.formSummaryError}>{error}</div>}\r\n      </form>)\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = ({login, isAuth}) => {\r\n\r\n    const onSubmit = (data) => {\r\n      login(data.login, data.password, data.rememberMe)\r\n    };\r\n\r\n    if(isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n  return <div>\r\n    <h1>LOGIN</h1>\r\n    <LoginReduxForm onSubmit={onSubmit}/>\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {login}),\r\n    )(Login);","import {getAuth} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () =>\r\n    ({\r\n        type: INITIALIZED_SUCCESS\r\n    });\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let responce = dispatch(getAuth());\r\n\r\n        Promise.all([responce]).then(\r\n            dispatch(initializedSuccess())\r\n        )\r\n\r\n    }\r\n};\r\n\r\nexport default appReducer;","\r\nlet initialState = {\r\n  onlineFriends: [\r\n    {\r\n      id: 3,\r\n      name: \"Martyn\",\r\n      avatar: \"https://cdn2.vectorstock.com/i/1000x1000/25/31/user-icon-businessman-profile-man-avatar-vector-10552531.jpg\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Sasha\",\r\n      avatar: \"https://banner2.cleanpng.com/20180319/rlq/kisspng-computer-icons-user-profile-avatar-profile-transparent-png-5ab03f3def8981.4074689915214999659812.jpg\"\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Sveta\",\r\n      avatar: \"https://banner2.cleanpng.com/20180319/rlq/kisspng-computer-icons-user-profile-avatar-profile-transparent-png-5ab03f3def8981.4074689915214999659812.jpg\"\r\n    }]\r\n};\r\nconst navbarReducer = (state = initialState, action) => {\r\n\r\n  return state;\r\n};\r\n\r\nexport default navbarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport navbarReducer from \"./navbar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    navbar: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport NavbarContainer from './components/Navbar/NavbarContainer';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings';\nimport Music from './components/Music/Music';\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {compose} from \"redux\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if(!this.props.initialized) {\n            return <Preloader />\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <NavbarContainer/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={withSuspense(DialogsContainer)}\n                    />\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}\n                    />\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}\n                    />\n                    <Route path='/news'\n                           render={() => <News/>}/>\n                    <Route path='/settings'\n                           render={() => <Settings/>}/>\n                    <Route path='/music'\n                           render={() => <Music/>}/>\n                    <Route path='/login'\n                           render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n});\n\nconst AppContainer =  compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))\n(App);\n\n\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter>\n    <Provider store={store}>\n        <AppContainer/>\n    </Provider>\n</BrowserRouter>};\n\nexport default SamuraiJSApp;","import React from 'react';\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => <React.Suspense fallback={<div>Loading...</div>}>\r\n        <Component {...props} />\r\n    </React.Suspense>\r\n};","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\n\nReactDOM.render(<SamuraiJSApp /> , document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formsControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formsControl\":\"FormsControls_formsControl__285Dg\",\"error\":\"FormsControls_error__2Vll1\",\"formSummaryError\":\"FormsControls_formSummaryError__50KzS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__Ju09p\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2dFAU\",\"lookingforAJob\":\"ProfileInfo_lookingforAJob__3hWSO\",\"socialContact\":\"ProfileInfo_socialContact__JSBug\"};","\r\nimport React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component { ...this.props }/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1t1yi\",\"pageNumber\":\"Paginator_pageNumber__38cdr\",\"activePage\":\"Paginator_activePage__1rSDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__3h5XS\",\"posts\":\"MyPosts_posts__r_8C6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__-vRmI\",\"active\":\"Post_active__2_fTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Rsiv\",\"loginBlock\":\"Header_loginBlock__cF2ct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1hOWG\",\"dialogsItems\":\"Dialogs_dialogsItems__1O6UF\",\"dialog\":\"Dialogs_dialog__3n5i5\",\"active\":\"Dialogs_active__3tb5y\",\"messages\":\"Dialogs_messages__kZw_y\",\"message\":\"Dialogs_message__jgX3H\",\"avatar\":\"Dialogs_avatar__3ts6R\"};","import React from 'react';\r\nimport cls from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (<div className={cls.dialog}>\r\n            <img src={props.avatar} alt=\"avatar\" />\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;"],"sourceRoot":""}